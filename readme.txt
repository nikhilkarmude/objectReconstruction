Programming Project 2 – 3D Reconstruction from Two Views CAP 5415, Principles and Algorithms of Computer Vision, Fall, 2014 Department of Computer Science, Florida State University

Points: 100 Due: Monday, November 10, 2014 Maximum Team Size: 2 Submission: You can submit a hardcopy of your report with source code attached or email your report along with source code as compressed tar archive to liux@cs.fsu.edu (with subject line starting with “Programming Project #2 Submission for CAP5415”). Only one copy from each team is required.

Purpose: To know how to implement the normalized eight-point algorithm for estimating the fundamental matrix, and how to generate 3D models from images. Background: In computer graphics, 3D models are required for rendering; in computer vision, 3D models provide additional information that can be used to resolve ambiguities inherent in 2D images. While there exist many different ways of generating 3D models, stereopsis is the simplest in that it does not require substantial devices other than a camera. In addition, the principles in stereopsis can be used in other situations (such as Kinect) and the accuracy of the reconstructed surfaces is sufficient for certain applications (e.g., reconstructing Rome using photos on the web). Another aspect of this assignment is to be able to generate good quality textured models from images in VRML (Virtual Reality Modeling Language) format or another format of your choice.

Assignment: 1) Implement a 3D reconstruction algorithm based on a set of correspondences, 2) provide an interface/means to define/refine corresponding points, 3) provide an interface/means to establish/mark triangles/quadrilaterals, 4) generate a texture image for each triangle/quadrilateral by rectifying the given images, and 5) save the results into a VRML model (see the Additional Information Section for a Matlab program) or any other format that supports texture-mapped surfaces (in Matlab, you can use warp, which supports on quadrilateral surfaces).

After you are done with your implementation, apply your program(s) to the Kinect dataset (Credit: Nathan Crock), which is available from http://www.cs.fsu.edu/~liux/courses/cap5415-2014/classonly/kinect.zip (see the Additional Information Section on the format of the dataset). You can pick any two pairs of images of the dataset and for each pair you need to reconstruct at least the visible region of the outlined desk top (in red below), including the books on the desk. For the occluded parts, you can model using prior knowledge (e.g., the desk top is rectangular).

Submission:  Report – You need to turn in a report, summarizing the algorithms you have used/developed, showing significant intermediate results to demonstrate the correctness of your algorithms and programs and documenting your findings.  Source code – You need to attach all the source programs you developed for this programming assignment. Note that if you have used other’s programs, you need to give proper references and credits, and you will be graded based on the additional work you have done.  Results – Include in the report a snapshot of each 3D model you have generated and then specify the URLs where the models are available on the web. Note that the results you submitted must be obtained from your own implementation. If you choose a format other than VRML for 3D models, please also describe how they can be rendered and I may request a demonstration if needed.
